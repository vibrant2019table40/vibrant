AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  vibrant-backend

  Sample SAM Template for vibrant-backend

Parameters:
  DynamoDBRegion:
    Type: String
    Default: us-east-1
  DynamoDBTable:
    Type: String
    Default: vibrant-db

Globals:
  Function:
    Timeout: 30

Resources:

  DynamoDBPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub '${AWS::StackName}-DynamoDBPolicy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: ['dynamodb:GetItem', 'dynamodb:PutItem']
            Resource: !Join ['', ['arn:aws:dynamodb:', !Ref DynamoDBRegion, ':', !Ref 'AWS::AccountId', ':table/', !Ref DynamoDBTable]]

  CasePlansFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: caseplans/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Policies:
        - !Ref DynamoDBPolicy
      Environment:
        Variables:
          DynamoDBRegion: !Ref DynamoDBRegion
          DynamoDBTable: !Ref DynamoDBTable
      Events:
        GetCasePlan:
          Type: Api
          Properties:
            Path: /caseplans/{key}
            Method: get
        SaveCasePlan:
          Type: Api
          Properties:
            Path: /caseplans/{key}
            Method: post

  ShareFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: caseplans/
      Handler: share.shareHandler
      Runtime: nodejs12.x
      Policies:
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
      Environment:
        Variables:
          PlanUrl: https://vibrant-table40.com/caseplans/
      Events:
        Share:
          Type: Api
          Properties:
            Path: /share/
            Method: post

Outputs:
  CasePlansApi:
    Description: 'API Gateway endpoint URL for Prod stage'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
